{"version":3,"file":"static/js/280.0b069ad5.chunk.js","mappings":"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","sources":["Services/index.js","components/Header/index.js","components/bootstrap/Dropdown.js","pages/cirugicalFlow/Portaria/Listagem/index.js"],"sourcesContent":["import axios from \"axios\";\n\nconst host = process.env.REACT_APP_API\n\n\nconst API = axios.create({\n   \n    baseURL: `${host}`,\n    headers:{\n        'Content-Type': 'application/json' \n    }\n});\n\nconst api = axios.create({\n    baseURL: `${host}`,\n    headers:{\n        'Content-Type': 'application/json' \n    }\n})\n\nexport default API;\nexport {api}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css'\n\n\n/*\n<span className=\"badge bg-l10-info text-info shadow-sm rounded\">SIMULAÇÃO</span>\n*/\nconst Header = ({titulo, children,localidade}) => {\n\t\n\treturn (\n\t\t<header >\n\t\t\t<p>\n\t\t\t\t<strong>{titulo} |</strong> {localidade}\n\t\t\t</p>\n            <div className='options'>\n            {children}\n            </div>\n\t\t</header>\n\t);\n};\n\nHeader.propTypes = {\n    titulo: \t\tPropTypes.string.isRequired,\n    localidade: \tPropTypes.string.isRequired,\n    children: \t\tPropTypes.node.isRequired\n};\n\nexport default Header;","import React, { cloneElement, forwardRef, useCallback, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Manager, Popper, Reference } from 'react-popper';\nimport classNames from 'classnames';\nimport useEventOutside from '@omtanke/react-use-event-outside';\nimport useDarkMode from '../../hooks/useDarkMode';\n\nexport const DropdownToggle = ({ children, isOpen, setIsOpen, hasIcon }) => {\n\tconst dropdownButtonRef = useRef(null);\n\n\tconst setButtonRef = useCallback((node, ref) => {\n\t\tdropdownButtonRef.current = node;\n\t\treturn ref(node);\n\t}, []);\n\n\treturn (\n\t\t<Reference>\n\t\t\t{({ ref }) =>\n\t\t\t\tReact.cloneElement(\n\t\t\t\t\tchildren.props.isButtonGroup ? (\n\t\t\t\t\t\t<span className='visually-hidden'>Toggle Dropdown</span>\n\t\t\t\t\t) : (\n\t\t\t\t\t\tchildren\n\t\t\t\t\t),\n\t\t\t\t\t{\n\t\t\t\t\t\tref: (node) => setButtonRef(node, ref),\n\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\t// eslint-disable-next-line no-unused-expressions\n\t\t\t\t\t\t\tchildren?.props?.onClick ? children.props.onClick() : null;\n\t\t\t\t\t\t\tsetIsOpen(!isOpen);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tclassName: classNames(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t'dropdown-toggle': hasIcon,\n\t\t\t\t\t\t\t\t'dropdown-toggle-split': children.props.isButtonGroup,\n\t\t\t\t\t\t\t\t// Only presentation\n\t\t\t\t\t\t\t\tshow: isOpen,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tchildren?.props?.className,\n\t\t\t\t\t\t),\n\t\t\t\t\t\t'aria-expanded': isOpen,\n\t\t\t\t\t},\n\t\t\t\t)\n\t\t\t}\n\t\t</Reference>\n\t);\n};\nDropdownToggle.propTypes = {\n\tchildren: PropTypes.node.isRequired,\n\tisOpen: PropTypes.bool,\n\tsetIsOpen: PropTypes.func,\n\thasIcon: PropTypes.bool,\n};\nDropdownToggle.defaultProps = {\n\tisOpen: false,\n\tsetIsOpen: null,\n\thasIcon: true,\n};\nDropdownToggle.displayName = 'DropdownToggle';\n\nexport const DropdownMenu = ({\n\tisOpen,\n\tsetIsOpen,\n\tchildren,\n\tclassName,\n\tisAlignmentEnd,\n\tbreakpoint,\n\tsize,\n\tdirection,\n\tisCloseAfterLeave,\n\t...props\n}) => {\n\tconst dropdownListRef = useRef(null);\n\n\tconst setListRef = useCallback((node, ref) => {\n\t\tdropdownListRef.current = node;\n\t\treturn ref(node);\n\t}, []);\n\n\tconst yAxis =\n\t\t(direction === 'up' && 'top') ||\n\t\t(direction === 'end' && 'right') ||\n\t\t(direction === 'start' && 'left') ||\n\t\t'bottom';\n\n\tconst xAxis = isAlignmentEnd ? 'end' : 'start';\n\n\tconst { darkModeStatus } = useDarkMode();\n\n\tif (isOpen) {\n\t\treturn (\n\t\t\t<Popper\n\t\t\t\tplacement={breakpoint ? 'bottom-start' : `${yAxis}-${xAxis}`}\n\t\t\t\tmodifiers={[\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'flip',\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\tfallbackPlacements: [`top-${xAxis}`, `bottom-${xAxis}`],\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t]}>\n\t\t\t\t{({ ref, style, placement }) => (\n\t\t\t\t\t<ul\n\t\t\t\t\t\trole='presentation'\n\t\t\t\t\t\tref={(node) => setListRef(node, ref)}\n\t\t\t\t\t\t// dynamic positioning must be disabled for responsive alignment\n\t\t\t\t\t\tstyle={!breakpoint ? style : null}\n\t\t\t\t\t\tdata-placement={placement}\n\t\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t\t'dropdown-menu',\n\t\t\t\t\t\t\t// For Bootstrap\n\t\t\t\t\t\t\t'show',\n\t\t\t\t\t\t\t{ 'dropdown-menu-dark': darkModeStatus },\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t[`dropdown-menu-${size}`]: size,\n\t\t\t\t\t\t\t\t'dropdown-menu-end': !isAlignmentEnd && breakpoint,\n\t\t\t\t\t\t\t\t[`dropdown-menu${breakpoint ? `-${breakpoint}` : ''}-${\n\t\t\t\t\t\t\t\t\tisAlignmentEnd ? 'end' : 'start'\n\t\t\t\t\t\t\t\t}`]: isAlignmentEnd || breakpoint,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tclassName,\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tdata-bs-popper={breakpoint ? 'static' : null}\n\t\t\t\t\t\tonMouseLeave={isCloseAfterLeave ? () => setIsOpen(false) : null}\n\t\t\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t\t\t{...props}>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</ul>\n\t\t\t\t)}\n\t\t\t</Popper>\n\t\t);\n\t}\n\treturn null;\n};\nDropdownMenu.propTypes = {\n\tisOpen: PropTypes.bool,\n\tsetIsOpen: PropTypes.func,\n\tchildren: PropTypes.node.isRequired,\n\tclassName: PropTypes.string,\n\tisAlignmentEnd: PropTypes.bool,\n\tbreakpoint: PropTypes.oneOf(['sm', 'md', 'lg', 'xl', 'xxl']),\n\tsize: PropTypes.oneOf(['sm', 'md', 'lg']),\n\tdirection: PropTypes.string,\n\tisCloseAfterLeave: PropTypes.bool,\n};\nDropdownMenu.defaultProps = {\n\tisOpen: false,\n\tsetIsOpen: null,\n\tclassName: null,\n\tisAlignmentEnd: false,\n\tbreakpoint: null,\n\tsize: null,\n\tdirection: null,\n\tisCloseAfterLeave: true,\n};\nDropdownMenu.displayName = 'DropdownMenu';\n\nconst ItemWrapper = forwardRef(({ children, className, ...props }, ref) => {\n\treturn (\n\t\t<li\n\t\t\tref={ref}\n\t\t\tclassName={classNames('dropdown-item-wrapper', className)}\n\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t{...props}>\n\t\t\t{children}\n\t\t</li>\n\t);\n});\nItemWrapper.propTypes = {\n\tchildren: PropTypes.node.isRequired,\n\tclassName: PropTypes.string,\n};\nItemWrapper.defaultProps = {\n\tclassName: null,\n};\n\nexport const DropdownItem = forwardRef(\n\t({ children, isHeader, isDivider, isText, ...props }, ref) => {\n\t\tif (isHeader) {\n\t\t\treturn (\n\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t<ItemWrapper ref={ref} {...props}>\n\t\t\t\t\t{cloneElement(typeof children === 'string' ? <h6>{children}</h6> : children, {\n\t\t\t\t\t\tclassName: classNames('dropdown-header', children?.props?.className),\n\t\t\t\t\t})}\n\t\t\t\t</ItemWrapper>\n\t\t\t);\n\t\t}\n\t\tif (isDivider) {\n\t\t\treturn (\n\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t<ItemWrapper ref={ref} {...props}>\n\t\t\t\t\t<hr className={classNames('dropdown-divider', children?.props?.className)} />\n\t\t\t\t</ItemWrapper>\n\t\t\t);\n\t\t}\n\t\tif (isText) {\n\t\t\treturn (\n\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t<ItemWrapper ref={ref} {...props}>\n\t\t\t\t\t{cloneElement(typeof children === 'string' ? <div>{children}</div> : children, {\n\t\t\t\t\t\tclassName: classNames(\n\t\t\t\t\t\t\t'dropdown-item-text',\n\t\t\t\t\t\t\t'dropdown-item',\n\t\t\t\t\t\t\t'disabled',\n\t\t\t\t\t\t\tchildren?.props?.className,\n\t\t\t\t\t\t),\n\t\t\t\t\t})}\n\t\t\t\t</ItemWrapper>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t<ItemWrapper ref={ref} {...props}>\n\t\t\t\t{cloneElement(typeof children === 'string' ? <span>{children}</span> : children, {\n\t\t\t\t\tclassName: classNames('dropdown-item', children?.props?.className),\n\t\t\t\t})}\n\t\t\t</ItemWrapper>\n\t\t);\n\t},\n);\nDropdownItem.propTypes = {\n\tchildren: PropTypes.node,\n\tisHeader: PropTypes.bool,\n\tisDivider: PropTypes.bool,\n\tisText: PropTypes.bool,\n};\nDropdownItem.defaultProps = {\n\tchildren: null,\n\tisHeader: false,\n\tisDivider: false,\n\tisText: false,\n};\n\nconst Dropdown = ({\n\ttag: Tag,\n\tchildren,\n\tisOpen,\n\tsetIsOpen,\n\tdirection,\n\tisButtonGroup,\n\tclassName,\n}) => {\n\tconst [state, setState] = useState(isOpen !== null && !!setIsOpen ? isOpen : false);\n\n\tconst dropdownRef = useRef(null);\n\n\t// Clicking outside to close\n\tconst closeMenu = useCallback(() => {\n\t\tif (isOpen !== null && !!setIsOpen) {\n\t\t\tsetIsOpen(false);\n\t\t} else {\n\t\t\tsetState(false);\n\t\t}\n\t}, [isOpen, setIsOpen]);\n\n\tuseEventOutside(dropdownRef, 'mousedown', closeMenu);\n\tuseEventOutside(dropdownRef, 'touchstart', closeMenu);\n\n\treturn (\n\t\t<Manager>\n\t\t\t<Tag\n\t\t\t\tref={dropdownRef}\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t{\n\t\t\t\t\t\t[`drop${direction}`]: direction && !isButtonGroup,\n\t\t\t\t\t\t'btn-group': isButtonGroup,\n\t\t\t\t\t},\n\t\t\t\t\tclassName,\n\t\t\t\t)}>\n\t\t\t\t{/* eslint-disable-next-line react/prop-types */}\n\t\t\t\t{children.map((child, index) =>\n\t\t\t\t\t['DropdownMenu', 'DropdownToggle'].includes(child.type.displayName)\n\t\t\t\t\t\t? React.cloneElement(child, {\n\t\t\t\t\t\t\t\tisOpen: isOpen !== null && !!setIsOpen ? isOpen : state,\n\t\t\t\t\t\t\t\tsetIsOpen: isOpen !== null && !!setIsOpen ? setIsOpen : setState,\n\t\t\t\t\t\t\t\tdirection,\n\t\t\t\t\t\t\t\t// eslint-disable-next-line react/no-array-index-key\n\t\t\t\t\t\t\t\tkey: index,\n\t\t\t\t\t\t  })\n\t\t\t\t\t\t: child,\n\t\t\t\t)}\n\t\t\t</Tag>\n\t\t</Manager>\n\t);\n};\nDropdown.propTypes = {\n\ttag: PropTypes.string,\n\tchildren: PropTypes.node.isRequired,\n\tisOpen: PropTypes.bool,\n\tsetIsOpen: PropTypes.func,\n\tclassName: PropTypes.string,\n\t/**\n\t * Menu position\n\t */\n\tdirection: PropTypes.oneOf(['up', 'end', 'down', 'start']),\n\tisButtonGroup: PropTypes.bool,\n};\nDropdown.defaultProps = {\n\ttag: 'div',\n\tisOpen: null,\n\tsetIsOpen: null,\n\tclassName: null,\n\tdirection: 'down',\n\tisButtonGroup: false,\n};\nDropdown.displayName = 'Dropdown';\n\nexport default Dropdown;\n","import {React, useEffect, useState} from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { FiAlertCircle } from \"react-icons/fi\";\nimport API from '../../../../Services';\nimport PageWrapper from '../../../../layout/PageWrapper/PageWrapper';\nimport Page from '../../../../layout/Page/Page';\nimport Button from '../../../../components/bootstrap/Button';\nimport { cirurgicalFlow } from '../../../../menu';\nimport Header from '../../../../components/Header';\nimport  {DropdownItem, DropdownMenu, DropdownToggle} from '../../../../components/bootstrap/Dropdown';\nimport Dropdown from '../../../../components/bootstrap/Dropdown';\n\n\nimport \"./style.css\"\n\n\n\nconst Listagem = () => {\n\n\nconst navigate = useNavigate();\nconst [patients, setPatients] = useState([]);\n\nconst [Loading, setLoading] = useState(true)\n\n\nconst [buttonStatusAptos, \tsetButtonStatusAptos\t] \t\t= useState(true\t)\nconst [buttonStatusTodos, \tsetButtonStatusTodos\t] \t\t= useState(false)\nconst [DisableButtonAptos, \tsetDisableButtonAptos\t] \t\t= useState(false)\nconst [DisableButtonTodos, \tsetDisableButtonTodos\t] \t\t= useState(false)\n\nconst location = useLocation()\n\n                                             \nuseEffect(() => {\n\t\n\tListarPacientes\t\t\t(2,location.state.CODIGO_LOCALIDADE\t)\n\t\n}, [location]);\n\n\nconst refreshFiltro = (param) => {\n\tif(param==='todos')\n\t{\n\t\tsetPatients([])\n\t\tListarPacientes(1, location.state.CODIGO_LOCALIDADE)\n\t\tsetDisableButtonAptos(true)\t\t\n\t\tsetButtonStatusAptos(false)\n\t\t\n\t}\n\t\n\tif(param==='aptos')\n\t{\n\t\tsetPatients([])\n\t\tListarPacientes(2, location.state.CODIGO_LOCALIDADE)\n\n\t\tsetDisableButtonTodos(true)\t\t/** Desativa outro botão p/ evitar bug na listagem */\n\t\t\n\t}\n}\n\nconst ListarPacientes = async (paramStatus, paramCodigoLocalidade) => {\n\tif(paramStatus === 1)\n\t{\n\t\ttry {\t\n\t\t\tsetLoading(true)\n\t\t\tconst patient = await API.get(`retornaCirurgiasAgendadasByLocalidade?cd_localidade=${paramCodigoLocalidade}`);\n\t\t\tconst response = JSON.stringify(patient.data)\n\t\t\tsetPatients(arr=>[...arr, JSON.parse(response)])\n\t\t\t/**\n\t\t\t * Após carregar listagem, trabalha nos botões.\n\t\t\t */\n\t\t\tsetDisableButtonAptos(false)\n\t\t\tsetButtonStatusAptos(false)\n\t\t\tsetButtonStatusTodos(true)\n\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t}\n\t\tsetLoading(false)\t\n\t}\n\telse if(paramStatus === 2)\n\t{\n\t\ttry {\n\t\t\tsetLoading(true)\t\t\n\t\t\tconst patient = await API.get(`/retornaCirurgiasAgendadasByLocalidade?cd_localidade=${paramCodigoLocalidade}&status=apto`);\n\t\t\tconst response = JSON.stringify(patient.data)\n\t\t\tsetPatients(arr=>[...arr, JSON.parse(response)])\n\t\t\t/**\n\t\t\t * Após carregar listagem, trabalha nos botões.\n\t\t\t */\n\t\t\tsetButtonStatusAptos(true)\n\t\t\tsetButtonStatusTodos(false)\n\t\t\tsetDisableButtonTodos(false)\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t}\n\t\tsetLoading(false)\t\n\t}\n\t\n};\n\n\n/**\n * \tPROX_ETAPA: param.PROX_ETAPA\n *  será fixa até o menu inicial ser dinâmico.\n */\n\nconst selectPatient = async (param) => {\n\n\t\n\ttry{\n\t\tconst session = JSON.parse(localStorage.getItem('CAPP-local'))\n\t\tconst RecuperaDadosProximaEtapa = await API.get(`/retornaProximaEtapa?cd_localidade=${session.CODIGO_LOCALIDADE}&cod_aviso=${param.COD_AVISO}`)\n\t\tif(RecuperaDadosProximaEtapa){\n\t\t\tnavigate('/portaria/recebimento', {\n\t\t\t\tstate: {\n\t\t\t\t\tID: 1,\n\t\t\t\t\tNOME_PACIENTE: param.PACIENTE,\n\t\t\t\t\tMEDICO: param.NM_PRESTADOR,\n\t\t\t\t\tPROCEDIMENTO: param.CIRURGIA,\n\t\t\t\t\tHORARIO: param.PREVISAO_INICIO,\n\t\t\t\t\tCD_ETAPA: param.CD_ETAPA,\n\t\t\t\t\tCOD_AVISO: param.COD_AVISO,\n\t\t\t\t\tCD_SAL_CIR: param.CD_SAL_CIR,\n\t\t\t\t\tPROX_ETAPA: RecuperaDadosProximaEtapa.data[0].PROX_ETAPA\n\t\t\t\t}\n\t\t\t  });\n\t\t}\n\t}catch(error){\n\t\tconsole.log(error)\n\t}\n};\n\n\n\nconst alterarLocalidade = () => {\n\tlocalStorage.removeItem('CAPP-local');\n\tnavigate('/')\n};\n\n\nreturn (\n\t\t<PageWrapper title={cirurgicalFlow.localChoice.text}>\n\t\t\t<Header titulo='Porta CC' localidade='Lista de Pacientes'>\n\t\t\t\n\t\t\t\t<Dropdown >\n\t\t\t\t\t<DropdownToggle>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tcolor=\"light\"\n\t\t\t\t\t\t\ticon=\"menu\"\n\t\t\t\t\t\t\tisLight\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<p> </p>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</DropdownToggle>\n\t\t\t\t\t<DropdownMenu>\n\t\t\t\t\t\t<DropdownItem onClick={() => alterarLocalidade()}>\n\t\t\t\t\t\t\tAlterar Local\n\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t</DropdownMenu>\n\t\t\t\t</Dropdown>\n\t\t\t</Header>\n\t\t\t<Page>\n\t\t\t\t<div className='position-filter'>\n\t\t\t\t\t<Button size='lg' disabled={DisableButtonAptos} color=\"info\" isActive={buttonStatusAptos} isLight onClick={()=> refreshFiltro('aptos')}>\n\t\t\t\t\t\tAptos\n\t\t\t\t\t</Button>\n\n\t\t\t\t\t<Button size='lg' disabled={DisableButtonTodos} style={{\"margin\": \"3px\"}} color=\"info\" isActive={buttonStatusTodos} isLight onClick={()=> refreshFiltro('todos')}>\n\t\t\t\t\t\tTodos\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t<div>\n\t\t\t\t{\n\t\t\t\t\t// eslint-disable-next-line no-nested-ternary\n\t\t\t\t\tLoading  ?\n\t\t\t\t\t\t<div className=\"lds-ring\"><div /><div /><div /><div /></div>\n\t\t\t\t\t:\n\t\t\t\t\t// eslint-disable-next-line no-nested-ternary\n\t\t\t\t\tpatients[0].length ?\t\n\t\t\t\t\tpatients[0].map((i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t// eslint-disable-next-line jsx-a11y/no-static-element-interactions\n\t\t\t\t\t\t\t<div key={i.CD_AVISO} className='bloco-paciente' onClick={()=>selectPatient(i)} onKeyDown={()=>selectPatient(i)}>\n\t\t\t\t\t\t\t<div className='fw-bold'>\n\t\t\t\t\t\t\t\t\t{i.PACIENTE}\n\t\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div className='text-muted'>\n\t\t\t\t\t\t\t\t\t<small>{i.NM_MAE}</small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='data_nasc'>\n\t\t\t\t\t\t\t\t\t{i.DT_NASCIMENTO}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t\t:\n\t\t\t\t\t<div className=\"d-flex justify-content-center\">\n\t\t\t\t\t\t<br /><br />\n\t\t\t\t\t\t<h1 className='mensagem-vazio'><FiAlertCircle /> Não há paciente</h1>\n\t\t\t\t\t</div>\n\n              \t\t }\n\t\t\t  \n\t\t\t   </div>\n\n\t\t\t</Page>\n\t\t</PageWrapper>\n\t);\n};\n\nexport default Listagem;\n"],"names":["host","process","API","axios","baseURL","headers","api","_ref","titulo","children","localidade","_jsxs","_jsx","className","DropdownToggle","isOpen","setIsOpen","hasIcon","dropdownButtonRef","useRef","setButtonRef","useCallback","node","ref","current","Reference","_ref2","_children$props2","React","props","isButtonGroup","onClick","_children$props","classNames","show","defaultProps","displayName","DropdownMenu","_ref3","isAlignmentEnd","breakpoint","size","direction","isCloseAfterLeave","dropdownListRef","setListRef","yAxis","xAxis","darkModeStatus","useDarkMode","Popper","placement","modifiers","name","options","fallbackPlacements","_ref4","style","role","onMouseLeave","ItemWrapper","forwardRef","_ref5","DropdownItem","_ref6","_children$props6","isHeader","isDivider","isText","_children$props3","_children$props4","_children$props5","cloneElement","Dropdown","_ref7","tag","Tag","state","setState","useState","dropdownRef","closeMenu","useEventOutside","Manager","map","child","index","includes","type","key","Listagem","navigate","useNavigate","patients","setPatients","Loading","setLoading","buttonStatusAptos","setButtonStatusAptos","buttonStatusTodos","setButtonStatusTodos","DisableButtonAptos","setDisableButtonAptos","DisableButtonTodos","setDisableButtonTodos","location","useLocation","useEffect","ListarPacientes","CODIGO_LOCALIDADE","refreshFiltro","param","async","paramStatus","paramCodigoLocalidade","patient","response","JSON","stringify","data","arr","parse","error","console","log","selectPatient","session","localStorage","getItem","RecuperaDadosProximaEtapa","COD_AVISO","ID","NOME_PACIENTE","PACIENTE","MEDICO","NM_PRESTADOR","PROCEDIMENTO","CIRURGIA","HORARIO","PREVISAO_INICIO","CD_ETAPA","CD_SAL_CIR","PROX_ETAPA","PageWrapper","title","cirurgicalFlow","Header","Button","color","icon","isLight","removeItem","Page","disabled","isActive","length","i","onKeyDown","NM_MAE","DT_NASCIMENTO","CD_AVISO","FiAlertCircle"],"sourceRoot":""}