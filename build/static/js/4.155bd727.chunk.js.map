{"version":3,"file":"static/js/4.155bd727.chunk.js","mappings":"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","sources":["webpack://app-cc/./src/pages/cirugicalFlow/Inducao/AssinaturaSala/style.module.css?ecd6","pages/cirugicalFlow/Inducao/AssinaturaSala/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"grandArea\":\"style_grandArea__VKVYI\",\"_area_teclado\":\"style__area_teclado__DcU7K\",\"webcam_area\":\"style_webcam_area__5KiUq\",\"cam\":\"style_cam__JgYqJ\",\"area_header_info_patient\":\"style_area_header_info_patient__-nYah\",\"_area_photo_and_chapa\":\"style__area_photo_and_chapa__AOeCR\",\"_area_inputs\":\"style__area_inputs__C1B6H\",\"btn_save\":\"style_btn_save__42dbH\",\"input_chapa\":\"style_input_chapa__WMGBV\"};","import React from 'react';\nimport { useRef, useState, useEffect } from 'react';\nimport Webcam from 'react-webcam';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useIsOnline } from 'react-use-is-online';\nimport PageWrapper from '../../../../layout/PageWrapper/PageWrapper';\nimport Page from '../../../../layout/Page/Page';\nimport { cirurgicalFlow } from '../../../../menu';\nimport Input from '../../../../components/bootstrap/forms/Input';\nimport Button, { ButtonGroup } from '../../../../components/bootstrap/Button';\n\nimport Modal, { ModalBody, ModalFooter, ModalHeader, ModalTitle } from '../../../../components/bootstrap/Modal';\nimport Header from '../../../../components/Header';\nimport { DropdownItem, DropdownMenu, DropdownToggle } from '../../../../components/bootstrap/Dropdown';\nimport Dropdown from '../../../../components/bootstrap/Dropdown';\nimport Card, { CardBody } from '../../../../components/bootstrap/Card';\n\nimport Icon from '../../../../components/icon/Icon';\nimport API, { api } from '../../../../Services';\n\nimport NumericKeyboard from '../../../../components/Teclado';\n// eslint-disable-next-line no-unused-vars\nimport style from './style.module.css'\n\n\n\nconst AssinaturaSala = () => {\n\n\tconst { isOnline } = useIsOnline()\n\n\n\tconst navigate = useNavigate()\n\tconst location = useLocation()\n\n\n\tlet submitDataReturn;\n\tlet userCheck;\n\n\tconst webRef = useRef(null);\n\tconst inputRef = useRef(null);\n\n\n\t/*\n\t*\tStates\n\t*/\n\n\tconst [DadosPaciente, setDadosPaciente] = useState([])\n\tconst [data, setData] = useState('')\n\tconst [confirmationModal, setConfirmationModal] = useState(false)\n\tconst [modalSuccess, setModalSuccess] = useState(false)\n\tconst [Loading, setLoading] = useState(false)\n\n\tconst [msgErrorAss,  \t\tsetMsgErrorAss] \t\t\t= useState('')\n\tconst [modalErrorMv, \t\tsetModalErrorMv] \t\t\t= useState(false)\n\tconst [nofaceS3Error, \t\tsetNofaceS3Error] \t\t\t= useState(false)\n\n\n\n\n\tuseEffect(() => {\n\n\t\tconsole.log('============= ASSINATURA SALA  =============\\n')\n\t\tconsole.log(location.state)\n\t\tconsole.log('============= FIM =================================================================\\n')\n\n\t\t/**\n\t\t* Se não houver dados guardados em parâmetro, será redirecionado à tela inicial.\n\t\t* Obs: Medida de segurança.\n\t\t*/\n\n\t\tif (location.state) {\n\t\t\tsetDadosPaciente(location.state)\n\t\t} else {\n\t\t\tnavigate('/')\n\t\t}\n\n\t}, [location, data, navigate]);\n\n\n\t/*\n\t* Caso seja clicado no MENU na barra superior, irá quebrar o LocalStorage e retornará a página inicial.\n\t*/\n\n\tconst alterarLocalidade = () => {\n\t\tlocalStorage.removeItem('CAPP-local');\n\t\tnavigate('/')\n\t};\n\n\n\tconst childToParent = (childData) => {\n\t\tconst valor = childData;\n\t\tif (valor === 'apagar') {\n\t\t\tconst valorMenos = inputRef.current.value.substring(0, inputRef.current.value.length - 1)\n\t\t\tinputRef.current.value = valorMenos;\n\t\t\tconsole.log(`Valor do input: ${inputRef.current.value}`)\n\t\t}\n\t\telse if (valor === 'zerar') {\n\t\t\tinputRef.current.value = '';\n\t\t\tconsole.log(`Valor do input: ${inputRef.current.value}`)\n\t\t} else {\n\n\t\t\tsetData(valor);\n\t\t\tinputRef.current.value += valor;\n\n\t\t}\n\t}\n\n\n\tconst videoConstraints = {\n\t\twidth: 540,\n\t\theight: 880,\n\t\tfacingMode: \"user\"\n\t};\n\n\t/*\n\tconst videoConstraints = {\n\t\t\twidth: 440,\n\t\t\theight: 280,\n\t\t\tfacingMode: \"user\"\n\t};\n\t\t\n\t*/\n\tconst getImage = () => {\n\n\t\treturn webRef.current.getScreenshot();\n\n\t};\n\n\t/*\n\n\tdesfazer\n\nconst handleError = async () =>{\n\t\tsetConfirmationModal(true)\n\t}\n\n\tconst handleSuccess = async() =>{\n\t\n\t\tsetModalSuccess(true)\n\t}\n\n*/\n\nconst handleError = async (image,badge,user,aviso,etapa,fileName,autenticado, tipoError) =>{\n\tsetLoading(false)\n\tconsole.log(`Entrou no handleError: ${JSON.stringify(image)}`)\n\t\n\t// eslint-disable-next-line default-case\n\tswitch(tipoError){\n\t\tcase 0:\n\t\t\tsetLoading(false)\n\t\t\tsetNofaceS3Error(true);\n\t\tbreak;\n\t\tcase 1:\n\t\t\tsetConfirmationModal(true)\n\t\t\tawait imageSave(image,\tbadge,\tuser,\taviso,\tetapa,\tfileName,\tautenticado)\n\t\tbreak;\n\t}\n\t\n}\n\n\tconst handleSuccess = async (image, badge, user, aviso, etapa, fileName, autenticado) => {\n\t\tsetLoading(false)\n\t\tconsole.log(\"Entrou no handleSuccess\")\n\t\tenviarAviso()\n\n\t\tsetModalSuccess(true)\n\t\timageSave(image, badge, user, aviso, etapa, fileName, autenticado)\n\n\t}\n\n\tconst enviarAviso = () => {\n\t\tapi.patch(`/aviso`, { sala: DadosPaciente.CODIGO_SUB_LOCALIDADE })\n\t\t\t.then(response => {\n\t\t\t\tconsole.log(`volta do aviso`, response.data);\n\t\t\t})\n\t}\n\n\n\n\t/**\n\t\t * \n\t\t * Função para salvar os dados de histórico de assinatura no back-end.\n\t\t */\n\n\tconst imageSave = async (image, badge, user, aviso, etapa, fileName, autenticado) => {\n\n\t\tconsole.log(\"Entrou no imageSave\")\n\n\t\tconst params = {\n\t\t\timage: `${image}`,\n\t\t\tbadge: `${badge}`,\n\t\t\tfilename: `${fileName}`,\n\t\t\tuser: `${user}`,\n\t\t\taviso: `${aviso}`,\n\t\t\tetapa: `${etapa}`,\n\t\t\tautenticado: `${autenticado}`,\n\t\t}\n\n\t\tconst resSendImage = await sendFile(params);\n\n\t\tconsole.log(JSON.stringify(resSendImage));\n\n\t\ttry {\n\n\n\t\t\tconst salvarHistoricoAutenticacao = await API.post('/salvarHistoricoAutenticacao', params);\n\t\t\tconsole.log(JSON.stringify(salvarHistoricoAutenticacao));\n\n\n\t\t} catch (error) {\n\n\t\t\tconsole.log(`error imageSave: ${error}`)\n\n\t\t}\n\t}\n\n\tconst sendFile = async (params) => {\n\n\t\tconst res = API.post(`/uploadImage`, params)\n\t\tconsole.log(res);\n\t}\n\n\n\n\tconst redirecionarPagina = async () => {\n\n\t\tnavigate('/')\n\n\n\t}\n\n\n\tconst isUser = async (img, badg) => {\n\t\tsetLoading(true)\n\t\t/**\n\t\t * verifica se tem internet, \n\t\t */\n\n\t\tif (!isOnline) {\n\t\t\talert('Você está sem acesso à internet!')\n\t\t\treturn\n\t\t}\n\n\n\t\tconst params = {\n\t\t\timageSource: `${img}`,\n\t\t\tinternCode: 1,\n\t\t\tkeyName: `${badg}`,\n\t\t\toption: 'compare',\n\t\t\tPAPEL_ACAO: 156\t\n\t\t}\n\n\n\n\t\ttry {\n\t\t\t/**\n\t\t\t * Irá enviar a imagem pro reconhecimento e verificará se o mesmo possui internet,\n\t\t\t * Caso não houver, buscará o nome do usuário através do código informado, para realizar o salvamento da imagem e no LOG do banco quem realizou a assinatura.\n\t\t\t */\n\t\t\t const identificaCodUsuario = await API.get(`/retornaCodUsuario?codchapa=${inputRef.current.value}`);\n\t\t\t if(!identificaCodUsuario.data[0])\n\t\t\t {\n\t\t\t\t// Não conseguiu identificar o usuário, checar qual erro está retornando.\n\t\t\t\t \n\t\t \n\t\t\t\tconst retornarMotError = await API.get(`/erroUserCracha/${badg}`);\n\t\t\t\tconst responseMotError = retornarMotError.data;\n\t\t\t\t\n \n\t\t\t\tsetLoading(false)\n\t\t\t\tsetMsgErrorAss(`${responseMotError}`)\n\t\t\t\tsetModalErrorMv(true)\n \n \n\t\t\t   // setConfirmationModal(true)\n\t\t\t\treturn\n\t\t\t }\n\n\t\t\tconst COD_USUARIO = identificaCodUsuario.data[0].CD_USUARIO\n\t\t\tconsole.log(COD_USUARIO)\n\t\t\tuserCheck = await api.post('/rekognition/face', params);\n\n\t\t\n\t\t\t// Ajustado (05/04)\n\n\t\t\tif ((userCheck.data[0].resposta === false) || (userCheck.data[0].user !== COD_USUARIO)) {\n\t\t\t\tawait handleError(img, badg, userCheck.data[0].user, location.state.DADOS.COD_AVISO, location.state.DADOS.PROX_ETAPA, `${badg}_${userCheck.data[0].user}_${location.state.DADOS.COD_AVISO}_${location.state.DADOS.PROX_ETAPA}`, 'N', userCheck.data[0].codigo);\n\t\t\t\treturn;\n\t\t\t} \n\n\t\t\tawait handleSuccess(img, badg, userCheck.data[0].user, location.state.DADOS.COD_AVISO, location.state.DADOS.PROX_ETAPA, `${badg}_${userCheck.data[0].user}_${location.state.DADOS.COD_AVISO}_${location.state.DADOS.PROX_ETAPA}`, 'S');\n\t\t\tawait submitData(userCheck.data[0].user)\n\t\t\t\t\n\t\t\t\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t}\n\n\n\t}\n\n\tconst closeModal = () => {\n\t\tsetConfirmationModal(false);\n\t};\n\n\t/*\n\tconst acionarSubLocalidadeRealtime = () => {\n\t\tapi.patch('/aviso', { sublocalidade: DadosPaciente.CODIGO_SUB_LOCALIDADE })\n\t}\n*/\n\n\n\n\tconst submitData = async (paramNome) => {\n\n\n\t\t\n\t\t // FORMATAÇÃO DA DATA \n\t\t // eslint-disable-next-line no-shadow\n\t\t const data = new Date();\n\t\t const dia = data.getDate().toString().padStart(2, '0');\n\t\t const mes = (data.getMonth() + 1).toString().padStart(2, '0');\n\t\t const ano = data.getFullYear().toString();\n\t\t const hora = data.getHours().toString().padStart(2, '0');\n\t\t const minuto = data.getMinutes().toString().padStart(2, '0');\n\t\t const dataHoraFormatada = `${ano}-${mes}-${dia}T${hora}:${minuto}`;\n\n\t\t\n\n\t\tconst params = {\n\t\t\tavisoCirurgia: DadosPaciente.DADOS.COD_AVISO,\n\t\t\tdtEtapa: dataHoraFormatada,\n\t\t\tcdEtapa: DadosPaciente.CODIGO_PROX_ETAPA,\n\t\t\tusuario: paramNome,\n\t\t\tsalaCirurgia: DadosPaciente.CODIGO_SALA,\n\t\t\ttipoAcao: 'I',\n\t\t\tsublocalidade: DadosPaciente.CODIGO_SUB_LOCALIDADE\n\t\t}\n\n\n\t\tsubmitDataReturn = await API.post('/avancarEtapasCirurgia', params);\n\n\n\t\tif (!submitDataReturn) {\n\t\t\tawait handleError();\n\n\t\t}\n\n\t\tconsole.log(submitDataReturn);\n\n\t\tsetTimeout(\n\t\t\tawait redirecionarPagina()\n\t\t\t, 50000)\n\n\n\t};\n\n\n\n\tconst sessionQ = JSON.parse(localStorage.getItem('CAPP-local'))\n\tconst localidadeHeader = `Indução L${sessionQ.SUBLOCALIDADE.split(' ')[1]}`;\n\n\n\n\n\treturn (\n\n\t\t<PageWrapper title={cirurgicalFlow.INDUCAO_ASSINATURA_SALA.text}>\n\t\t\t<Header titulo={localidadeHeader} localidade='Assinatura Sala'>\n\t\t\t\t<Dropdown >\n\t\t\t\t\t<DropdownToggle>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tcolor=\"light\"\n\t\t\t\t\t\t\ticon=\"menu\"\n\t\t\t\t\t\t\tisLight\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<p> </p>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</DropdownToggle>\n\t\t\t\t\t<DropdownMenu>\n\t\t\t\t\t\t<DropdownItem onClick={() => alterarLocalidade()}>\n\t\t\t\t\t\t\tAlterar Local\n\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t</DropdownMenu>\n\t\t\t\t</Dropdown>\n\t\t\t</Header>\n\t\t\t<Page>\n\n\t\t\t\t{/* INICIO */}\n\t\t\t\t<div className={style.container}>\n\t\t\t\t<header>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Card className={style.area_header_info_patient}>\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<h3>Paciente</h3>\n\t\t\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t\t\t{DadosPaciente.DADOS ? DadosPaciente.DADOS.PACIENTE : '- - '}\n\t\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</div>\n\t\t\t\t</header>\n\t\t\t\t<main className={style.grandArea}>\n\t\t\t\t\t{/* área onde haverá a câmera */}\n\t\t\t\t\t<div className={style._area_photo_and_chapa}>\n\t\t\t\t\t\t<div className={style.webcam_area}>\n\t\t\t\t\t\t\t<Webcam\n\t\t\t\t\t\t\t\tref={webRef}\n\t\t\t\t\t\t\t\tclassName={style.cam}\n\t\t\t\t\t\t\t\taudio={false}\n\t\t\t\t\t\t\t\tscreenshotFormat='image/jpeg'\n\t\t\t\t\t\t\t\tvideoConstraints={videoConstraints}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* área onde haverá o input do crachá + teclado */}\n\t\t\t\t\t<div className={style._area_teclado}>\n\t\t\t\t\t\t<div style={{ padding: '1rem' }}>\n\t\t\t\t\t\t\t<div style={{ width: '400px' }}>\n\t\t\t\t\t\t\t\t<h2>Informe o código do crachá</h2>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tclassName={style.input_chapa}\n\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\t\t\tref={inputRef}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div style={{ width: '400px' }}>\n\t\t\t\t\t\t\t\t<NumericKeyboard childToParent={childToParent} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{/* área onde haverá o input de assinar + botão de retornar */}\n\t\t\t\t\t\t\t<div className={style._area_inputs}>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tclassName={style.btn_save}\n\t\t\t\t\t\t\t\t\t\tcolor='success'\n\t\t\t\t\t\t\t\t\t\ticon='user'\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tconst image = getImage()\n\t\t\t\t\t\t\t\t\t\t\tconst imageReplaced = image.replace('data:image/jpeg;base64,', '')\n\t\t\t\t\t\t\t\t\t\t\tisUser(imageReplaced, inputRef.current.value)\n\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\tAssinar\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<Icon onClick={() => navigate(-1)} icon='reply' color='#fff' size='5x' forceFamily='material' />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</main>\n\t\t\t</div>\n\t\t\t{/* FIM */}\n\n\t\t\t\t<Modal\n\t\t\t\t\tisCentered\n\t\t\t\t\tisAnimation={false}\n\t\t\t\t\tid='example-modal'\n\t\t\t\t\tisOpen={confirmationModal}\n\t\t\t\t\ttitleId='example-title'>\n\t\t\t\t\t<ModalHeader style={{backgroundColor: \"#FE5B3A\", color: \"#fff\"}}>\n\t\t\t\t\t\t<ModalTitle id='example-title'>AVISO</ModalTitle>\n\t\t\t\t\t</ModalHeader>\n\t\t\t\t\t<ModalBody className='ModalBody'>\n\t\t\t\t\t<h1>Usuário não encontrado<br /></h1>\n\t\t\t\t\tPor favor, tente novamente.\n\t\t\t\t\t</ModalBody>\n\t\t\t\t\t<ModalFooter>\n\n\t\t\t\t\t\t<ButtonGroup isToolbar=\"true\" size='lg'>\n\t\t\t\t\t\t\t<Button className='btn-style' color='success' icon='done' onClick={closeModal}>\n\t\t\t\t\t\t\t\tFECHAR\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t</ModalFooter>\n\t\t\t\t</Modal>\n\n\t\t\t\t<Modal\n\t\t\t\t\tisCentered\n\t\t\t\t\tisAnimation={false}\n\t\t\t\t\tid='sucess-modal'\n\t\t\t\t\tisOpen={modalSuccess}\n\t\t\t\t\ttitleId='example-titlea'>\n\t\t\t\t\t<ModalHeader style={{ \"backgroundColor\": \"#37BBAA\", color:\"#fff\" }}>\n\t\t\t\t\t\t<ModalTitle id='example-title'>AVISO</ModalTitle>\n\t\t\t\t\t</ModalHeader>\n\t\t\t\t\t<ModalBody className='ModalBody'>\n\t\t\t\t\t\t<h1>ASSINADO COM SUCESSO!</h1>\n\t\t\t\t\t\t<br /><br />\n\t\t\t\t\t</ModalBody>\n\t\t\t\t</Modal>\n\n\t\t\t\t<Modal\n\t\t\t\t\tisCentered\n\t\t\t\t\tisAnimation={false}\n\t\t\t\t\tid='loading'\n\t\t\t\t\tisOpen={Loading}\n\t\t\t\t\ttitleId='loading'>\n\t\t\t\t\t<ModalHeader style={{ \"backgroundColor\": \"#636363\", color: \"#fff\" }}>\n\t\t\t\t\t\t<ModalTitle id='example-title'>ASSINANDO...\n\n\t\t\t\t\t\t</ModalTitle>\n\t\t\t\t\t</ModalHeader>\n\t\t\t\t\t<ModalBody className='ModalBody'>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<h1>Assinando...Por favor, aguarde...</h1>\n\t\t\t\t\t\t<br /><br />\n\t\t\t\t\t</ModalBody>\n\n\t\t\t\t</Modal>\n\t\t\t\n\t\t\t\t<Modal \n\t\t\t\t\tisCentered\n\t\t\t\t\tisAnimation={false}\n\t\t\t\tisOpen={modalErrorMv}>\n\t\t\t\t\t\t<ModalHeader style={{backgroundColor: \"#FE5B3A\", color:\"#fff\"}}>\n\t\t\t\t\t\t\t<ModalTitle id='example-title'>AVISO</ModalTitle>\n\t\t\t\t\t\t</ModalHeader>\n\t\t\t\t\t\t<ModalBody className='ModalBody'>\n\t\t\t\t\t\t\t<h1>{msgErrorAss}</h1><br />\n\t\t\t\t\t\t</ModalBody>\n\t\t\t\t\t\t<ModalFooter>\n\t\t\t\t\t\t<ButtonGroup isToolbar=\"true\" size='lg'>\n\t\t\t\t\t\t\t\t<Button className='btn-style' color='light' onClick={()=>setModalErrorMv(false)}>\n\t\t\t\t\t\t\t\t\tFECHAR\n\t\t\t\t\t\t\t\t</Button>\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t</ModalFooter>\n\t\t\t\t</Modal>\t\n\n\n\t\t\t\t<Modal\n\t\t\t\t\tisCentered\n\t\t\t\t\tisAnimation={false}\n\t\t\t\t\tisOpen={nofaceS3Error}>\n\t\t\t\t\t\t<ModalHeader style={{backgroundColor: \"#FE5B3A\", color:\"#fff\"}}>\n\t\t\t\t\t\t\t<ModalTitle id='example-title'>AVISO</ModalTitle>\n\t\t\t\t\t\t</ModalHeader>\n\t\t\t\t\t\t<ModalBody className='ModalBody'>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<h1>Face não cadastrada!<br /></h1>\n\t\t\t\t\t\t\t<h3>Por favor, realize o cadastro e tente novamente.</h3>\n\t\t\t\t\t\t</ModalBody>\n\t\t\t\t\t\t<ModalFooter>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<ButtonGroup isToolbar=\"true\" size='lg'>\n\t\t\t\t\t\t\t\t<Button className='btn-style' color='light' onClick={()=>setNofaceS3Error(false)}>\n\t\t\t\t\t\t\t\t\tFECHAR\n\t\t\t\t\t\t\t\t</Button>\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t</ModalFooter>\n\t\t\t\t</Modal>\n\n\t\t\t</Page>\n\t\t</PageWrapper>\n\t);\n};\n\nexport default AssinaturaSala;"],"names":["AssinaturaSala","isOnline","useIsOnline","navigate","useNavigate","location","useLocation","submitDataReturn","userCheck","webRef","useRef","inputRef","DadosPaciente","setDadosPaciente","useState","data","setData","confirmationModal","setConfirmationModal","modalSuccess","setModalSuccess","Loading","setLoading","msgErrorAss","setMsgErrorAss","modalErrorMv","setModalErrorMv","nofaceS3Error","setNofaceS3Error","useEffect","console","log","state","handleError","async","image","badge","user","aviso","etapa","fileName","autenticado","tipoError","JSON","stringify","imageSave","enviarAviso","api","sala","CODIGO_SUB_LOCALIDADE","then","response","params","filename","resSendImage","sendFile","salvarHistoricoAutenticacao","API","error","res","isUser","img","badg","alert","imageSource","internCode","keyName","option","PAPEL_ACAO","identificaCodUsuario","current","value","responseMotError","COD_USUARIO","CD_USUARIO","resposta","DADOS","COD_AVISO","PROX_ETAPA","codigo","handleSuccess","submitData","Date","dia","getDate","toString","padStart","mes","getMonth","dataHoraFormatada","getFullYear","getHours","getMinutes","avisoCirurgia","dtEtapa","cdEtapa","CODIGO_PROX_ETAPA","usuario","paramNome","salaCirurgia","CODIGO_SALA","tipoAcao","sublocalidade","setTimeout","redirecionarPagina","localidadeHeader","parse","localStorage","getItem","SUBLOCALIDADE","split","_jsxs","PageWrapper","title","cirurgicalFlow","children","_jsx","Header","titulo","localidade","Dropdown","DropdownToggle","Button","color","icon","isLight","DropdownMenu","DropdownItem","onClick","removeItem","Page","className","style","Card","CardBody","PACIENTE","Webcam","ref","audio","screenshotFormat","videoConstraints","width","height","facingMode","padding","Input","type","disabled","NumericKeyboard","childToParent","childData","valor","valorMenos","substring","length","imageReplaced","getScreenshot","replace","Icon","size","forceFamily","Modal","isCentered","isAnimation","id","isOpen","titleId","ModalHeader","backgroundColor","ModalTitle","ModalBody","ModalFooter","ButtonGroup","isToolbar","closeModal"],"sourceRoot":""}