{"version":3,"file":"static/js/826.c2c2a0a4.chunk.js","mappings":"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","sources":["webpack://app-cc/./src/pages/cirugicalFlow/Preparo/Assinatura/style.module.css?2d92","pages/cirugicalFlow/Preparo/Assinatura/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"grandArea\":\"style_grandArea__TZsFm\",\"_area_teclado\":\"style__area_teclado__YJrzH\",\"webcam_area\":\"style_webcam_area__PMWev\",\"cam\":\"style_cam__j8HKV\",\"area_header_info_patient\":\"style_area_header_info_patient__MUUFp\",\"_area_photo_and_chapa\":\"style__area_photo_and_chapa__5Wkt5\",\"_area_inputs\":\"style__area_inputs__mGSYh\",\"btn_save\":\"style_btn_save__Yy4U9\",\"input_chapa\":\"style_input_chapa__YyxZm\"};","import React from 'react';\nimport { useRef, useState, useEffect } from 'react';\nimport Webcam from 'react-webcam';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useIsOnline } from 'react-use-is-online';\nimport PageWrapper from '../../../../layout/PageWrapper/PageWrapper';\nimport Page from '../../../../layout/Page/Page';\nimport { cirurgicalFlow } from '../../../../menu';\nimport Input from '../../../../components/bootstrap/forms/Input';\nimport Button, { ButtonGroup } from '../../../../components/bootstrap/Button';\nimport Modal, { ModalBody, ModalFooter, ModalHeader, ModalTitle } from '../../../../components/bootstrap/Modal';\nimport Header from '../../../../components/Header';\nimport { DropdownItem, DropdownMenu, DropdownToggle } from '../../../../components/bootstrap/Dropdown';\nimport Dropdown from '../../../../components/bootstrap/Dropdown';\nimport Card, { CardBody } from '../../../../components/bootstrap/Card';\n\nimport NumericKeyboard from '../../../../components/Teclado';\n// eslint-disable-next-line no-unused-vars\nimport style from './style.module.css'\n\n\n\n\nimport Icon from '../../../../components/icon/Icon';\nimport API from '../../../../Services';\n\n\nconst AssinaturaCheckList = () => {\n\n\n\tconst { isOnline } = useIsOnline()\n\n\n\tconst navigate = useNavigate()\n\tconst location = useLocation()\n\n\n\tlet submitDataReturn;\n\tlet userCheck;\n\n\tconst webRef = useRef(null);\n\tconst inputRef = useRef(null);\n\n\n\tconst [DadosPaciente, setDadosPaciente] = useState([])\n\tconst [data, setData] = useState('')\n\tconst [confirmationModal, setConfirmationModal] = useState(false)\n\tconst [modalSuccess, setModalSuccess] = useState(false)\n\tconst [MomentRespostaTexto, setMomentRespostaTexto] = useState(null)\n\tconst [Loading, setLoading] = useState(false)\n\tconst [msgErrorAss, setMsgErrorAss] = useState('')\n\tconst [modalErrorMv, setModalErrorMv] = useState(false)\n\tconst [nofaceS3Error, setNofaceS3Error] = useState(false)\n\n\n\n\n\tuseEffect(() => {\n\n\n\t\tif (location.state) {\n\t\t\tsetDadosPaciente(location.state)\n\t\t} else {\n\t\t\tnavigate('/')\n\t\t}\n\n\t}, [location, data, navigate]);\n\n\n\n\n\tconst alterarLocalidade = () => {\n\t\tlocalStorage.removeItem('CAPP-local');\n\t\tnavigate('/')\n\t};\n\n\n\tconst childToParent = (childData) => {\n\t\tconst valor = childData;\n\t\tif (valor === 'apagar') {\n\t\t\tconst valorMenos = inputRef.current.value.substring(0, inputRef.current.value.length - 1)\n\t\t\tinputRef.current.value = valorMenos;\n\n\t\t}\n\t\telse if (valor === 'zerar') {\n\t\t\tinputRef.current.value = '';\n\n\t\t} else {\n\n\t\t\tsetData(valor);\n\t\t\tinputRef.current.value += valor;\n\n\t\t}\n\t}\n\n\tconst videoConstraints = {\n\t\twidth: 540,\n\t\theight: 880,\n\t\tfacingMode: \"user\"\n\t};\n\n\n\tconst getImage = () => {\n\n\t\treturn webRef.current.getScreenshot();\n\n\t};\n\n\n\n\tconst handleError = async (image, badge, user, aviso, etapa, fileName, autenticado, tipoError) => {\n\t\tsetLoading(false)\n\t\t// eslint-disable-next-line default-case\n\t\tswitch (tipoError) {\n\t\t\tcase 0:\n\t\t\t\tsetLoading(false)\n\t\t\t\tsetNofaceS3Error(true);\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tsetConfirmationModal(true)\n\t\t\t\tawait imageSave(image, badge, user, aviso, etapa, fileName, autenticado)\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tconst handleSuccess = async (image, badge, user, aviso, etapa, fileName, autenticado) => {\n\t\tsetLoading(false)\n\n\t\tsetModalSuccess(true)\n\n\n\t\tawait imageSave(image, badge, user, aviso, etapa, fileName, autenticado)\n\n\n\n\n\t}\n\n\n\n\tconst imageSave = async (image, badge, user, aviso, etapa, fileName, autenticado) => {\n\n\n\t\tconst params = {\n\t\t\timage: `${image}`,\n\t\t\tbadge: `${badge}`,\n\t\t\tfilename: `${fileName}`,\n\t\t\tuser: `${user}`,\n\t\t\taviso: `${aviso}`,\n\t\t\tetapa: `${etapa}`,\n\t\t\tautenticado: `${autenticado}`,\n\t\t}\n\n\t\tconst resSendImage = await sendFile(params);\n\n\t\tconsole.log(JSON.stringify(resSendImage));\n\n\t\ttry {\n\n\n\t\t\tconst salvarHistoricoAutenticacao = await API.post('/salvarHistoricoAutenticacao', params);\n\t\t\tconsole.log(JSON.stringify(salvarHistoricoAutenticacao));\n\n\n\t\t} catch (error) {\n\n\t\t\tconsole.log(`error imageSave: ${error}`)\n\t\t\tconsole.log(MomentRespostaTexto)\n\t\t}\n\t}\n\n\tconst sendFile = async (params) => {\n\n\t\tconst res = await API.post(`/uploadImage`, params)\n\t\tconsole.log(res);\n\t}\n\n\n\n\tconst redirecionarPagina = async () => {\n\n\n\t\tnavigate('/')\n\t}\n\n\n\tconst insereRepostaChecklist = async (paramNome, objeto) => {\n\t\ttry {\n\t\t\tconst cadastra = await API.post(`/insertRepostasChecklist`, { questionsCheckList: objeto, Usuario: paramNome });\n\t\t\tconst response = await cadastra.data[0];\n\t\t\tif (response) {\n\t\t\t\t// verificar a data correta que está passando.\n\t\t\t\tconsole.clear()\n\t\t\t\tconsole.log('================== DATA DE JEJUM QUE ESTÁ SENDO CADASTRADA =========================')\n\t\t\t\tconsole.log(response.dataHoraInicioJejum)\n\t\t\t\tconsole.log('================== DATA DE JEJUM QUE ESTÁ SENDO CADASTRADA =========================')\n\t\t\t\tsetMomentRespostaTexto(response.dataHoraInicioJejum)\n\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\n\t}\n\n\n\tconst isUser = async (img, badg) => {\n\n\t\tif((inputRef.current.value).length < 4){\n\t\t\treturn;\n\t\t}\n\n\t\tsetLoading(true)\n\t\t/**\n\t\t * verifica se tem internet, \n\t\t */\n\n\t\tif (!isOnline) {\n\t\t\talert('Você está sem acesso à internet!')\n\t\t\treturn\n\t\t}\n\n\n\t\tconst params = {\n\t\t\timageSource: `${img}`,\n\t\t\tinternCode: 1,\n\t\t\tkeyName: `${badg}`,\n\t\t\toption: 'compare',\n\t\t\tPAPEL_ACAO: 156\n\t\t}\n\n\n\n\t\ttry {\n\t\t\t/**\n\t\t\t * Irá enviar a imagem pro reconhecimento e verificará se o mesmo possui internet,\n\t\t\t * Caso não houver, buscará o nome do usuário através do código informado, para realizar o salvamento da imagem e no LOG do banco quem realizou a assinatura.\n\t\t\t */\n\t\t\tconst identificaCodUsuario = await API.get(`/retornaCodUsuario?codchapa=${inputRef.current.value}`);\n\t\t\tif (!identificaCodUsuario.data[0]) {\n\n\t\t\t\t// Não conseguiu identificar o usuário, checar qual erro está retornando.\n\n\n\t\t\t\tconst retornarMotError = await API.get(`/erroUserCracha/${badg}`);\n\t\t\t\tconst responseMotError = retornarMotError.data;\n\n\n\t\t\t\tsetLoading(false)\n\t\t\t\tsetMsgErrorAss(`${responseMotError}`)\n\t\t\t\tsetModalErrorMv(true)\n\n\n\t\t\t\t// setConfirmationModal(true)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst COD_USUARIO = identificaCodUsuario.data[0].CD_USUARIO\n\t\t\tconsole.log(COD_USUARIO)\n\t\t\tuserCheck = await API.post(`/rekognition/face`, params);\n\n\t\t\t// Ajustado (05/04)\n\n\t\t\tif ((userCheck.data[0].resposta === false) || (userCheck.data[0].user !== COD_USUARIO)) {\n\t\t\t\tawait handleError(img, badg, userCheck.data[0].user, location.state.DADOS.COD_AVISO, location.state.DADOS.PROX_ETAPA, `${badg}_${userCheck.data[0].user}_${location.state.DADOS.COD_AVISO}_${location.state.DADOS.PROX_ETAPA}`, 'N', userCheck.data[0].codigo);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait handleSuccess(img, badg, userCheck.data[0].user, location.state.DADOS.COD_AVISO, location.state.DADOS.PROX_ETAPA, `${badg}_${userCheck.data[0].user}_${location.state.DADOS.COD_AVISO}_${location.state.DADOS.PROX_ETAPA}`, 'S');\n\t\t\tawait insereRepostaChecklist(userCheck.data[0].user, location.state.CHECKLIST)\n\t\t\tawait submitData(userCheck.data[0].user)\n\n\n\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t}\n\n\n\t}\n\n\tconst closeModal = () => {\n\t\tsetConfirmationModal(false);\n\t};\n\n\n\n\tconst submitData = async (paramNome) => {\n\n\t\tconst dataTime = new Date\n\t\tconst d = new Date(dataTime.getTime())\n\n\n\t\tconst params = {\n\t\t\tavisoCirurgia: DadosPaciente.DADOS.COD_AVISO,\n\t\t\tdtEtapa: d,\n\t\t\tcdEtapa: DadosPaciente.INFO_PROX_ETAPA.PROX_ETAPA.PROX_ETAPA,\n\t\t\tusuario: paramNome,\n\t\t\tsalaCirurgia: DadosPaciente.DADOS.DS_SAL_CIR,\n\t\t\ttipoAcao: 'I',\n\t\t\tsublocalidade: DadosPaciente.CODIGO_SUB_LOCALIDADE\n\t\t}\n\n\n\t\tsubmitDataReturn = await API.post(`/avancarEtapasCirurgia`, params);\n\n\n\n\n\t\tif (!submitDataReturn) {\n\t\t\tawait handleError();\n\n\t\t}\n\n\t\tconsole.log(submitDataReturn);\n\n\n\t\tsetTimeout(\n\t\t\tawait redirecionarPagina()\n\t\t\t, 5000)\n\n\n\n\t};\n\n\n\treturn (\n\n\t\t<PageWrapper title={cirurgicalFlow.INDUCAO_ASSINATURA_CHECKLIST.text}>\n\t\t\t<Header titulo='Sala de Preparo' localidade='Assinatura Colaborador'>\n\t\t\t\t<Dropdown >\n\t\t\t\t\t<DropdownToggle>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tcolor=\"light\"\n\t\t\t\t\t\t\ticon=\"menu\"\n\t\t\t\t\t\t\tisLight\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<p> </p>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</DropdownToggle>\n\t\t\t\t\t<DropdownMenu>\n\t\t\t\t\t\t<DropdownItem onClick={() => alterarLocalidade()}>\n\t\t\t\t\t\t\tAlterar Local\n\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t</DropdownMenu>\n\t\t\t\t</Dropdown>\n\t\t\t</Header>\n\t\t\t<Page>\n\n\t\t\t\t{/** INICIO */}\n\t\t\t\t<div className={style.container}>\n\t\t\t\t\t<header>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Card className={style.area_header_info_patient} >\n\t\t\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t\t\t<h3>Paciente</h3>\n\t\t\t\t\t\t\t\t\t\t<h1>{DadosPaciente.DADOS ? DadosPaciente.DADOS.PACIENTE : '- - '}</h1>\n\t\t\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</header>\n\t\t\t\t\t<main className={style.grandArea}>\n\t\t\t\t\t\t{/* área onde haverá a câmera */}\n\t\t\t\t\t\t<div className={style._area_photo_and_chapa}>\n\t\t\t\t\t\t\t<div className={style.webcam_area}>\n\t\t\t\t\t\t\t\t<Webcam ref={webRef} className={style.cam} audio={false}  screenshotFormat=\"image/jpeg\" videoConstraints={videoConstraints} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* área onde haverá o input do crachá + teclado */}\n\t\t\t\t\t\t<div className={style._area_teclado}>\n\t\t\t\t\t\t\t<div style={{\"padding\": \"1rem\"}}>\n\t\t\t\t\t\t\t\t\t\t<div style={{width: \"400px\"}}>\n\t\t\t\t\t\t\t\t\t\t\t<h2>Informe o código do crachá</h2>\n\t\t\t\t\t\t\t\t\t\t\t<Input className={style.input_chapa} type=\"number\" disabled  ref={inputRef}/>\t\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div style={{width: \"400px\"}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<NumericKeyboard childToParent={childToParent} /> \n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t{/* área onde haverá o input de assinar + botão de retornar */}\n\t\t\t\t\t\t\t\t\t\t\t<div className={style._area_inputs}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button className={style.btn_save} color='success' icon='user' onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst image = getImage();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst imageReplaced = image.replace('data:image/jpeg;base64,', '');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisUser(imageReplaced, inputRef.current.value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tAssinar\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon onClick={() => navigate(-1)} icon='reply' color= '#fff' size='5x' forceFamily= 'material' />\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</main>\n\t\t\t\t</div>\n\n\n\t\t\t\t<Modal\n\t\t\t\t\tid='example-modal'\n\t\t\t\t\tisOpen={confirmationModal}\n\t\t\t\t\ttitleId='example-title'>\n\t\t\t\t\t<ModalHeader className='modal-header-error'>\n\t\t\t\t\t\t<ModalTitle id='example-title'>AVISO</ModalTitle>\n\t\t\t\t\t</ModalHeader>\n\t\t\t\t\t<ModalBody className='ModalBody'>\n\n\t\t\t\t\t\t<h1>Usuário não encontrado<br /></h1>\n\t\t\t\t\t\tPor favor, tente novamente.\n\t\t\t\t\t</ModalBody>\n\t\t\t\t\t<ModalFooter>\n\n\t\t\t\t\t\t<ButtonGroup isToolbar=\"true\" size='lg'>\n\t\t\t\t\t\t\t<Button className='btn-style' color='light' onClick={closeModal}>\n\t\t\t\t\t\t\t\tFECHAR\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t</ModalFooter>\n\t\t\t\t</Modal>\n\n\n\n\t\t\t\t<Modal\n\t\t\t\t\tid='sucess-modal'\n\n\t\t\t\t\tisOpen={modalSuccess}\n\t\t\t\t\ttitleId='example-titlea'>\n\t\t\t\t\t<ModalHeader style={{ \"backgroundColor\": \"#37BBAA\" }}>\n\t\t\t\t\t\t<ModalTitle id='example-title'>AVISO</ModalTitle>\n\t\t\t\t\t</ModalHeader>\n\t\t\t\t\t<ModalBody className='ModalBody'>\n\t\t\t\t\t\t<h1>ASSINADO COM SUCESSO!</h1>\n\t\t\t\t\t\t<br /><br />\n\t\t\t\t\t</ModalBody>\n\n\n\t\t\t\t</Modal>\n\n\n\t\t\t\t<Modal isOpen={modalErrorMv}>\n\t\t\t\t\t<ModalHeader className='modal-header-error'>\n\t\t\t\t\t\t<ModalTitle id='example-title'>AVISO</ModalTitle>\n\t\t\t\t\t</ModalHeader>\n\t\t\t\t\t<ModalBody className='ModalBody'>\n\t\t\t\t\t\t<h1>{msgErrorAss}</h1><br />\n\t\t\t\t\t</ModalBody>\n\t\t\t\t\t<ModalFooter>\n\t\t\t\t\t\t<ButtonGroup isToolbar=\"true\" size='lg'>\n\t\t\t\t\t\t\t<Button className='btn-style' color='light' onClick={() => setModalErrorMv(false)}>\n\t\t\t\t\t\t\t\tFECHAR\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t</ModalFooter>\n\t\t\t\t</Modal>\n\n\t\t\t\t<Modal\n\t\t\t\t\tisOpen={nofaceS3Error}>\n\t\t\t\t\t<ModalHeader className='modal-header-error'>\n\t\t\t\t\t\t<ModalTitle id='example-title'>AVISO</ModalTitle>\n\t\t\t\t\t</ModalHeader>\n\t\t\t\t\t<ModalBody className='ModalBody'>\n\n\t\t\t\t\t\t<h1>Face não cadastrada!<br /></h1>\n\t\t\t\t\t\t<h3>Por favor, realize o cadastro e tente novamente.</h3>\n\t\t\t\t\t</ModalBody>\n\t\t\t\t\t<ModalFooter>\n\n\t\t\t\t\t\t<ButtonGroup isToolbar=\"true\" size='lg'>\n\t\t\t\t\t\t\t<Button className='btn-style' color='light' onClick={() => setNofaceS3Error(false)}>\n\t\t\t\t\t\t\t\tFECHAR\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t</ModalFooter>\n\t\t\t\t</Modal>\n\n\n\t\t\t\t<Modal\n\t\t\t\t\tid='loading'\n\t\t\t\t\tisOpen={Loading}\n\t\t\t\t\ttitleId='loading'>\n\t\t\t\t\t<ModalHeader style={{ \"backgroundColor\": \"#636363\" }}>\n\t\t\t\t\t\t<ModalTitle id='example-title'>ASSINANDO...\n\n\t\t\t\t\t\t</ModalTitle>\n\t\t\t\t\t</ModalHeader>\n\t\t\t\t\t<ModalBody className='ModalBody'>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<h1>Assinando...Por favor, aguarde...</h1>\n\t\t\t\t\t\t<br /><br />\n\t\t\t\t\t</ModalBody>\n\n\t\t\t\t</Modal>\n\n\t\t\t</Page>\n\t\t\n\t\t</PageWrapper>\n\t);\n};\n\nexport default AssinaturaCheckList;"],"names":["AssinaturaCheckList","isOnline","useIsOnline","navigate","useNavigate","location","useLocation","submitDataReturn","userCheck","webRef","useRef","inputRef","DadosPaciente","setDadosPaciente","useState","data","setData","confirmationModal","setConfirmationModal","modalSuccess","setModalSuccess","MomentRespostaTexto","setMomentRespostaTexto","Loading","setLoading","msgErrorAss","setMsgErrorAss","modalErrorMv","setModalErrorMv","nofaceS3Error","setNofaceS3Error","useEffect","state","handleError","async","image","badge","user","aviso","etapa","fileName","autenticado","tipoError","imageSave","params","filename","resSendImage","sendFile","console","log","JSON","stringify","salvarHistoricoAutenticacao","API","error","res","isUser","img","badg","current","value","length","alert","imageSource","internCode","keyName","option","PAPEL_ACAO","identificaCodUsuario","responseMotError","COD_USUARIO","CD_USUARIO","resposta","DADOS","COD_AVISO","PROX_ETAPA","codigo","handleSuccess","paramNome","objeto","cadastra","questionsCheckList","Usuario","response","clear","dataHoraInicioJejum","insereRepostaChecklist","CHECKLIST","submitData","dataTime","Date","d","getTime","avisoCirurgia","dtEtapa","cdEtapa","INFO_PROX_ETAPA","usuario","salaCirurgia","DS_SAL_CIR","tipoAcao","sublocalidade","CODIGO_SUB_LOCALIDADE","setTimeout","redirecionarPagina","_jsxs","PageWrapper","title","cirurgicalFlow","children","_jsx","Header","titulo","localidade","Dropdown","DropdownToggle","Button","color","icon","isLight","DropdownMenu","DropdownItem","onClick","localStorage","removeItem","Page","className","style","Card","CardBody","PACIENTE","Webcam","ref","audio","screenshotFormat","videoConstraints","width","height","facingMode","Input","type","disabled","NumericKeyboard","childToParent","childData","valor","valorMenos","substring","imageReplaced","getScreenshot","replace","Icon","size","forceFamily","Modal","id","isOpen","titleId","ModalHeader","ModalTitle","ModalBody","ModalFooter","ButtonGroup","isToolbar","closeModal"],"sourceRoot":""}